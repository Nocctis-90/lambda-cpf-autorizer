name: Deploy Lambda Function

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Substitua pela sua região desejada
         
      - name: Install Dependencies
        run: |
          pip install -r lambda/deps.txt
    
  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Substitua pela sua região desejada

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.6.2

    - name: Create Lambda Deployment Package
      run: |
        cd lambda/
        zip -r authorizer.zip .

    - name: Terraform Init
      working-directory: infra/
      run: terraform init
    
    - name: Terraform Plan
      working-directory: infra/
      run: terraform plan
    
    - name: Terraform Apply
      continue-on-error: true
      run: |
        cd infra
        terraform apply -input=false -var="TF_LAMBDA_ZIP_PATH=${{ github.workspace }}/lambda/authorizer.zip" -auto-approve